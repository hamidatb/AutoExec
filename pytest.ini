[tool:pytest]
# Pytest configuration for AutoExec

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --color=yes
    --durations=10

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    setup: marks tests related to setup functionality
    validation: marks tests related to input validation
    sheets: marks tests related to Google Sheets functionality
    reconciliation: marks tests related to reconciliation functionality

# Minimum version
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Ignore warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:google.*
    ignore::UserWarning:discord.*

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage options (when using pytest-cov)
[coverage:run]
source = googledrive, discordbot, ae_langchain
omit = 
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    */depreciated/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
